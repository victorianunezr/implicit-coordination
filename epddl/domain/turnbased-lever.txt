(define (domain lever-domain)
    (:types position agent)
    
    (:predicates
        (at ?pos - position)
        (adjacent ?pos0 - position ?pos1 - position)
        (leftmost ?pos - position)
        (rightmost ?pos - position)
        (turn ?agent - agent)
    )
    
    (:action move-left
        :parameters (?agent - agent ?next-agent - agent ?pos - position ?next-pos - position)
        :owners (Alice Bob)
        :events
            (
                (e1
                    :precondition (and 
                        (at ?pos) 
                        (not (leftmost ?pos)) 
                        (adjacent ?next-pos ?pos)
                        (turn ?agent)
                    )
                    :effect (
                        (at ?next-pos) 
                        (not (at ?pos)) 
                        (not (turn ?agent)) 
                        (turn ?next-agent)
                    )
                )
            )
        :accessibility ()
    )

    (:action move-right
        :parameters (?agent - agent ?next-agent - agent ?pos - position ?next-pos - position)
        :owners (Alice Bob)
        :events
            (
                (e1
                    :precondition (and 
                        (at ?pos) 
                        (not (rightmost ?pos)) 
                        (adjacent ?pos ?next-pos)
                        (turn ?agent)
                    )
                    :effect (
                        (at ?next-pos) 
                        (not (at ?pos)) 
                        (not (turn ?agent)) 
                        (turn ?next-agent)
                    )
                )
            )
        :accessibility ()
    )
)
